@using scrum_board_tool.Shared;
@inject DialogService DialogService
@inject HttpClient http

<Draggable Data="Data">
    <div class="task-box">
        <RadzenTextBox @bind-Value="Data.Name" Style="width:80%; display: block" Name="Name" onblur="@(() => UpdateTask())" />
        <RadzenNumeric @bind-Value=@Data.TimeRemaining onblur="@(() => UpdateTask())" Style="width:50px; display: block" />
        <RadzenDropDown @bind-Value="Data.State" Data="@states" TextProperty="" ValueProperty="" Style="width:80%; display: block;" onblur="@(() => UpdateTask())">
            <Template>
                @Enum.GetName(typeof(StateOfItems), context)
            </Template>
        </RadzenDropDown>
    </div>
</Draggable>

@code {
    [Parameter]
    public WorkTask? Data { get; set; }

    [Parameter]
    public BacklogItem? Parent { get; set; }

    IEnumerable<StateOfItems> states = ((StateOfItems[])Enum.GetValues(typeof(StateOfItems))).ToList();

    async void UpdateTask()
    {
        if (Parent != null && Data != null)
        {
            Parent.Tasks = new HashSet<WorkTask>();
            Data.BacklogItem = Parent;
        }
        _ = await http.PostAsJsonAsync($"worktask/{Data?.Id}", Data);
        Data = await http.GetFromJsonAsync<WorkTask>($"worktask/{Data?.Id}");

        StateHasChanged();
    }
}
